{"version":3,"sources":["./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/_forms/date-input/date-input.component.ts","./src/app/_forms/date-input/date-input.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/_services/account.service.ts","./src/app/errors/server-error/server-error.component.ts","./src/app/errors/server-error/server-error.component.html","./src/app/_directives/has-role.directive.ts","./src/app/_services/busy.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/_models/pagination.ts","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/_modules/shared.module.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_guards/admin.guard.ts","./src/app/_services/admin.service.ts","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/_guards/auth.guard.ts","./src/app/_services/message.service.ts","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_interceptors/loading.interceptor.ts","./src/app/_services/members.service.ts","./src/app/app.module.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/_forms/text-input/text-input.component.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/_services/presence.service.ts","./src/app/_models/userParams.ts","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/_services/paginationHelper.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/app-routing.module.ts","./src/app/_services/confirm.service.ts","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-test-errors',\r\n  templateUrl: './test-errors.component.html',\r\n  styleUrls: ['./test-errors.component.css']\r\n})\r\nexport class TestErrorsComponent implements OnInit {\r\n  baseUrl = environment.apiUrl;\r\n  validationErrors: string[] = [];\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get404Error() {\r\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  get400Error() {\r\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  get500Error() {\r\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  get401Error() {\r\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  get400ValidationError() {\r\n    this.http.post(this.baseUrl + 'account/register', {}).subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n      this.validationErrors = error;\r\n    })\r\n  }\r\n\r\n}\r\n","<ng-container>\r\n    <button (click)=\"get500Error()\" class=\"btn btn-outline-primary mr-3\">Test 500 Error</button>\r\n    <button (click)=\"get400Error()\" class=\"btn btn-outline-primary mr-3\">Test 400 Error</button>\r\n    <button (click)=\"get401Error()\" class=\"btn btn-outline-primary mr-3\">Test 401 Error</button>\r\n    <button (click)=\"get404Error()\" class=\"btn btn-outline-primary mr-3\">Test 404 Error</button>\r\n    <button (click)=\"get400ValidationError()\" class=\"btn btn-outline-primary mr-3\">Test 400 Validation Error</button>\r\n\r\n    <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\r\n        <ul class=\"text-danger\">\r\n            <li *ngFor=\"let error of validationErrors\">\r\n                {{error}}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</ng-container>\r\n","import { Component, Input, OnInit, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\n\r\n@Component({\r\n  selector: 'app-date-input',\r\n  templateUrl: './date-input.component.html',\r\n  styleUrls: ['./date-input.component.css']\r\n})\r\nexport class DateInputComponent implements ControlValueAccessor {\r\n  @Input() label: string;\r\n  @Input() maxDate: Date;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(@Self() public ngControl: NgControl) {\r\n    this.ngControl.valueAccessor = this;\r\n    this.bsConfig = {\r\n      containerClass: 'theme-blue',\r\n      dateInputFormat: 'DD MMMM YYYY'\r\n    }\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n  }\r\n\r\n}\r\n","<div class=\"form-group\">\r\n    <input\r\n        type=\"text\"\r\n        [class.is-invalid]='ngControl.touched && ngControl.invalid'\r\n        class='form-control'\r\n        [formControl]='ngControl.control'\r\n        placeholder=\"{{label}}\"\r\n        bsDatepicker\r\n        [bsConfig]='bsConfig'\r\n        [maxDate]='maxDate'\r\n    >\r\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">{{label}} is required</div>\r\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @Output() cancelRegister = new EventEmitter();\r\n  registerForm: FormGroup;\r\n  maxDate: Date;\r\n  validationErrors: string[] = [];\r\n\r\n  constructor(private accountService: AccountService, private toastr: ToastrService,\r\n    private fb: FormBuilder, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeForm();\r\n    this.maxDate = new Date();\r\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\r\n  }\r\n\r\n  initializeForm() {\r\n    this.registerForm = this.fb.group({\r\n      gender: ['male'],\r\n      username: ['', Validators.required],\r\n      knownAs: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\r\n      confirmPassword: ['', [Validators.required, this.matchValues('password')]]\r\n    })\r\n  }\r\n\r\n  matchValues(matchTo: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      return control?.value === control?.parent?.controls[matchTo].value ? null : {isMatching: true}\r\n    }\r\n  }\r\n\r\n  register() {\r\n    this.accountService.register(this.registerForm.value).subscribe(response => {\r\n      this.router.navigateByUrl('/members');\r\n    }, error => {\r\n      this.validationErrors = error;\r\n    })\r\n  }\r\n\r\n  cancel() {\r\n    this.cancelRegister.emit(false);\r\n  }\r\n\r\n}\r\n","<form [formGroup]='registerForm' (ngSubmit)=\"registerForm.valid && register()\" autocomplete=\"off\">\r\n    <h2 class=\"text-center text-primary\">Sign up</h2>\r\n    <hr>\r\n\r\n    <div class=\"form-group\">\r\n        <label class=\"control-label\" style=\"margin-right: 10px;\">I am a:</label>\r\n        <label class=\"radio-inline\">\r\n            <input type=\"radio\" value=\"male\" formControlName=\"gender\"> Male\r\n        </label>\r\n        <label class=\"radio-inline\">\r\n            <input type=\"radio\" value=\"female\" formControlName=\"gender\" class=\"ml-3\"> Female\r\n        </label>\r\n    </div>\r\n\r\n    <app-text-input\r\n        [formControl]='registerForm.controls[\"username\"]'\r\n        [label]='\"Username\"'>\r\n    </app-text-input>\r\n    <app-text-input\r\n        [formControl]='registerForm.controls[\"knownAs\"]'\r\n        [label]='\"Known As\"'>\r\n    </app-text-input>\r\n    <app-date-input\r\n        [formControl]='registerForm.controls[\"dateOfBirth\"]'\r\n        [label]='\"Date Of Birth\"'\r\n        [maxDate]='maxDate'>\r\n    </app-date-input>\r\n    <app-text-input\r\n        [formControl]='registerForm.controls[\"city\"]'\r\n        [label]='\"City\"'>\r\n    </app-text-input>\r\n    <app-text-input\r\n        [formControl]='registerForm.controls[\"country\"]'\r\n        [label]='\"Country\"'>\r\n    </app-text-input>\r\n    <app-text-input\r\n        [formControl]='registerForm.controls[\"password\"]'\r\n        [label]='\"Password\"'\r\n        [type]='\"password\"'>\r\n    </app-text-input>\r\n    <app-text-input\r\n        [formControl]='registerForm.controls[\"confirmPassword\"]'\r\n        [label]='\"Confirm Password\"'\r\n        [type]='\"password\"'>\r\n    </app-text-input>\r\n\r\n    <div class=\"row\" *ngIf=\"validationErrors.length > 0\">\r\n        <ul class=\"text-danger\">\r\n            <li *ngFor=\"let error of validationErrors\">\r\n                {{error}}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\n    <div class=\"form-group text-center\">\r\n        <button [disabled]='!registerForm.valid' class=\"btn btn-success mr-2\" type=\"submit\">Register</button>\r\n        <button class=\"btn btn-default mr-2\" (click)=\"cancel()\" type=\"button\">Cancel</button>\r\n    </div>\r\n</form>","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'app-member-messages',\r\n  templateUrl: './member-messages.component.html',\r\n  styleUrls: ['./member-messages.component.css']\r\n})\r\nexport class MemberMessagesComponent implements OnInit {\r\n  @ViewChild('messageForm') messageForm: NgForm;\r\n  @Input() messages: Message[]\r\n  @Input() username: string;\r\n  messageContent: string;\r\n\r\n  constructor(public messageService: MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendMessage() {\r\n    this.messageService.sendMessage(this.username, this.messageContent).then(() => {\r\n      this.messageForm.reset();\r\n    })\r\n  }\r\n}\r\n","<div class=\"card\">\r\n    <div class=\"card-body\">\r\n        <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\r\n            No messages yet... say hi by using the message box below\r\n        </div>\r\n\r\n        <ul #scrollMe\r\n            style=\"overflow: scroll; height: 500px;\"\r\n            [scrollTop]=\"scrollMe.scrollHeight\"\r\n            *ngIf=\"(messageService.messageThread$ | async)?.length > 0\"\r\n            class=\"chat\">\r\n            <li *ngFor=\"let message of (messageService.messageThread$ | async)\">\r\n                <div>\r\n                    <span class=\"chat-img float-right\">\r\n                        <img class=\"rounded-circle\" src=\"{{message.senderPhotoUrl || './assets/user.png'}}\" alt=\"{{message.senderUsername}}\">\r\n                    </span>\r\n                    <div class=\"chat-body\">\r\n                        <div class=\"header\">\r\n                            <small class=\"text-muted\">\r\n                                <span class=\"fa fa-clock-o\">{{message.messageSent | timeago}}</span>\r\n                                <span class=\"text-danger\"\r\n                                    *ngIf=\"!message.dateRead && message.senderUsername !== username\">\r\n                                    (unread)\r\n                                </span>\r\n                                <span class=\"text-success\"\r\n                                    *ngIf=\"message.dateRead && message.senderUsername !== username\">\r\n                                    (read {{message.dateRead | timeago}})\r\n                                </span>\r\n                            </small>\r\n                        </div>\r\n                        <p>{{message.content}}</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n\r\n    </div>\r\n    <div class=\"card-footer\">\r\n        <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\r\n            <div class=\"input-group\">\r\n                <input type=\"text\"\r\n                    required\r\n                    [(ngModel)]=\"messageContent\"\r\n                    name=\"messageContent\"\r\n                    class=\"form-control input-sm\"\r\n                    placeholder=\"Send a private message\">\r\n                <div class=\"input-group-append\">\r\n                    <button [disabled]=\"!messageForm.valid\" class=\"btn btn-primary\" type=\"submit\">Send</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-photo-management',\r\n  templateUrl: './photo-management.component.html',\r\n  styleUrls: ['./photo-management.component.css']\r\n})\r\nexport class PhotoManagementComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>photo-management works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <h1>Not found</h1>\r\n    <button class=\"btn btn-info btn-lg\" routerLink='/'>Return to home page</button>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/users';\r\nimport { PresenceService } from './presence.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n  baseUrl = environment.apiUrl;\r\n  private currentUserSource = new ReplaySubject<User>(1);\r\n  currentUser$ = this.currentUserSource.asObservable();\r\n\r\n  constructor(private http: HttpClient, private presence: PresenceService) { }\r\n\r\n  login(model: any){\r\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\r\n      map((response: User) => {\r\n        const user = response;\r\n        if (user) {\r\n          this.setCurrentUser(user);\r\n          this.presence.createHubConnection(user);\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  register(model: any) {\r\n    return this.http.post(this.baseUrl + 'account/register', model).pipe(\r\n      map((user: User) => {\r\n        if (user) {\r\n          this.setCurrentUser(user);\r\n          this.presence.createHubConnection(user);\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  setCurrentUser(user: User) {\r\n    user.roles = [];\r\n    const roles = this.getDecodedToken(user.token).role;\r\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles); //check if the roles is an array if so assign, if not push our single role to the array\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.currentUserSource.next(user);\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('user');\r\n    this.currentUserSource.next(null);\r\n    this.presence.stopHubConnection();\r\n  }\r\n\r\n  getDecodedToken(token) {\r\n    return JSON.parse(atob(token.split('.')[1])); //JWT payload is at index 1\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-server-error',\r\n  templateUrl: './server-error.component.html',\r\n  styleUrls: ['./server-error.component.css']\r\n})\r\nexport class ServerErrorComponent implements OnInit {\r\n  error: any;\r\n\r\n  constructor(private router: Router) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.error = navigation?.extras?.state?.error;\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h4>Internal server error - refreshing the page will make the error disappear!</h4>\r\n<ng-container *ngIf=\"error\">\r\n    <h5 class='text-danger'>Error: {{error.message}}</h5>\r\n    <p class=\"font-weight-bold\">Note: If you are seeing this then Angular is probably not to blame</p>\r\n    <p>What to do next?</p>\r\n    <ol>\r\n        <li>Open the chrome dev tools</li>\r\n        <li>Inspect the network tab</li>\r\n        <li>Check the failing request</li>\r\n        <li>Examine the request URL - make sure it is correct</li>\r\n        <li>Reproduce the error in Postman - if we see the same response, then the issue is not with Angular</li>\r\n    </ol>\r\n    <p>Following is the stack trace - this is where your investigate should start!</p>\r\n    <code class=\"mt-5\" style=\"background-color: whitesmoke;\">{{error.details}}</code>\r\n</ng-container>\r\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { User } from '../_models/users';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Directive({\r\n  selector: '[appHasRole]'\r\n})\r\nexport class HasRoleDirective implements OnInit {\r\n  @Input() appHasRole: string[];\r\n  user: User;\r\n\r\n  constructor(private viewContainerRef: ViewContainerRef, private templateRef: TemplateRef<any>, private accountService: AccountService) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\r\n      this.user = user;\r\n    })\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    //clear view if no roles\r\n    if (!this.user?.roles || this.user == null) {\r\n      this.viewContainerRef.clear();\r\n      return;\r\n    }\r\n\r\n    if (this.user?.roles.some(r => this.appHasRole.includes(r))) {\r\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n    } else {\r\n      this.viewContainerRef.clear();\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BusyService {\r\n  busyRequestCount = 0;\r\n\r\n  constructor(private spinnerService: NgxSpinnerService) { }\r\n\r\n  busy() {\r\n    this.busyRequestCount++;\r\n    this.spinnerService.show(undefined, {\r\n      type: 'line-scale-party',\r\n      bdColor: 'rgba(255,255,255,0)',\r\n      color: '#333333'\r\n    })\r\n  }\r\n\r\n  idle() {\r\n    this.busyRequestCount--;\r\n    if (this.busyRequestCount <= 0) {\r\n      this.busyRequestCount = 0;  //safeguard for negative counts\r\n      this.spinnerService.hide();\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  registerMode = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  registerToggle() {\r\n    this.registerMode = !this.registerMode;\r\n  }\r\n\r\n  cancelRegisterMode(event: boolean) {\r\n    this.registerMode = event;\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div *ngIf=\"!registerMode\" style='text-align: center;'>\r\n        <h1>Find your match</h1>\r\n        <p class=\"lead\">Come on in to view your matches... all you need to do is sign up!</p>\r\n        <div class=\"text-center\">\r\n            <button (click)=\"registerToggle()\" class=\"btn btn-primary btn-large mr-2\">Register</button>\r\n            <button class=\"btn btn-info btn-large\">Learn more</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"registerMode\" class=\"container\">\r\n        <div class=\"row justify-content-center\">\r\n            <div class=\"col-4\">\r\n                <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    result: T;\r\n    pagination: Pagination;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://localhost:5001/api/',\r\n  hubUrl: 'https://localhost:5001/hubs/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { User } from '../_models/users';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private accountService: AccountService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    let currentUser: User;\r\n\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => currentUser = user);\r\n    if (currentUser) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${currentUser.token}`\r\n        }\r\n      })\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Message } from '../_models/message';\r\nimport { Pagination } from '../_models/pagination';\r\nimport { ConfirmService } from '../_services/confirm.service';\r\nimport { MessageService } from '../_services/message.service';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css']\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n  messages: Message[] = [];\r\n  pagination: Pagination;\r\n  container = 'Unread';\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  loading = false;\r\n\r\n  constructor(private messageService: MessageService, private confirmService: ConfirmService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMessages();\r\n  }\r\n\r\n  loadMessages() {\r\n    this.loading = true;\r\n    this.messageService.getMessages(this.pageNumber, this.pageSize, this.container).subscribe(response => {\r\n      this.messages = response.result;\r\n      this.pagination = response.pagination;\r\n      this.loading = false;\r\n    })\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    this.confirmService.confirm('Confirm delete message', 'This cannot be undone').subscribe(result => {\r\n      if (result) {\r\n        this.messageService.deleteMessage(id).subscribe(() => {\r\n          this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    this.pageNumber = event.page;\r\n    this.loadMessages();\r\n  }\r\n}\r\n","<div class=\"row mb-4\">\r\n    <div class=\"btn-group\" name='container'>\r\n        <button class=\"btn btn-primary\" btnRadio='Unread' [(ngModel)]=\"container\" (click)=\"loadMessages()\">\r\n            <i class=\"fa fa-envelope\"></i> Unread\r\n        </button>\r\n        <button class=\"btn btn-primary\" btnRadio='Inbox' [(ngModel)]=\"container\" (click)=\"loadMessages()\">\r\n            <i class=\"fa fa-envelope-open\"></i> Inbox\r\n        </button>\r\n        <button class=\"btn btn-primary\" btnRadio='Outbox' [(ngModel)]=\"container\" (click)=\"loadMessages()\">\r\n            <i class=\"fa fa-paper-plane\"></i> Outbox\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"messages?.length === 0\">\r\n    <h3>No messages</h3>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"messages?.length > 0\">\r\n    <table class=\"table table-hover\" style=\"cursor: pointer;\">\r\n        <tr>\r\n            <th style=\"width: 40%;\">Message</th>\r\n            <th style=\"width: 20%;\">From / To</th>\r\n            <th style=\"width: 20%;\">Sent / Received</th>\r\n            <th style=\"width: 20%;\"></th>\r\n        </tr>\r\n        <tr [hidden]=\"loading\" *ngFor=\"let message of messages\"\r\n            routerLink='{{container === \"Outbox\"\r\n                ? \"/members/\" + message.recipientUsername\r\n                : \"/members/\" + message.senderUsername}}' [queryParams]='{tab: 3}'>\r\n            <td>{{message.content}}</td>\r\n            <td>\r\n                <div *ngIf=\"container === 'Outbox'\">\r\n                    <img\r\n                        class=\"img-circle rounded-circle mr-2\"\r\n                        src=\"{{message.recipientPhotoUrl || './assets/user.png'}}\"\r\n                        alt=\"{{message.recipientUsername}}\">\r\n                    <strong>{{message.recipientUsername | titlecase}}</strong>\r\n                </div>\r\n                <div *ngIf=\"container !== 'Outbox'\">\r\n                    <img\r\n                        class=\"img-circle rounded-circle mr-2\"\r\n                        src=\"{{message.senderPhotoUrl || './assets/user.png'}}\"\r\n                        alt=\"{{message.senderUsername}}\">\r\n                    <strong>{{message.senderUsername | titlecase}}</strong>\r\n                </div>\r\n            </td>\r\n            <td>{{message.messageSent | timeago}}</td>\r\n            <td>\r\n                <button (click)=\"$event.stopPropagation()\" (click)=\"deleteMessage(message.id)\" class=\"btn btn-danger\">Delete</button>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination && !loading && messages?.length > 0\">\r\n    <pagination\r\n        [boundaryLinks]=\"true\"\r\n        [totalItems]=\"pagination.totalItems\"\r\n        [itemsPerPage]=\"pagination.itemsPerPage\"\r\n        [(ngModel)]=\"pagination.currentPage\"\r\n        (pageChanged)=\"pageChanged($event)\"\r\n        previousText=\"&lsaquo;\"\r\n        nextText=\"&rsaquo;\"\r\n        firstText=\"&laquo;\"\r\n        lastText=\"&raquo;\">\r\n    </pagination>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs'\r\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker'\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { TimeagoModule } from 'ngx-timeago';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule ,\r\n    BsDropdownModule.forRoot(),\r\n    ToastrModule.forRoot({\r\n      positionClass: 'toast-bottom-right'\r\n    }),\r\n    TabsModule.forRoot(),\r\n    NgxGalleryModule,\r\n    NgxSpinnerModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    ButtonsModule.forRoot(),\r\n    TimeagoModule.forRoot(),\r\n    ModalModule.forRoot()\r\n  ],\r\n  exports: [\r\n    BsDropdownModule,\r\n    ToastrModule,\r\n    TabsModule,\r\n    NgxGalleryModule,\r\n    NgxSpinnerModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule,\r\n    PaginationModule,\r\n    ButtonsModule,\r\n    TimeagoModule,\r\n    ModalModule\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private router: Router, private toastr: ToastrService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    return next.handle(request).pipe(\r\n      catchError(error => {\r\n        if (error) {\r\n          switch (error.status) {\r\n            case 400:\r\n              if (error.error.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in error.error.errors) {\r\n                  if (error.error.errors[key]) {\r\n                    modalStateErrors.push(error.error.errors[key]);\r\n                  }\r\n                }\r\n                throw modalStateErrors.flat();\r\n              } else if (typeof(error.error) === 'object') {\r\n                this.toastr.error(error.statusText === \"OK\" ? \"Bad Request\" : error.statusText, error.status);\r\n              } else {\r\n                this.toastr.error(error.error, error.status);\r\n              }\r\n              break;\r\n            case 401:\r\n              this.toastr.error(error.statusText === \"OK\" ? \"Unauthorized\" : error.statusText, error.status);\r\n              break;\r\n            case 404:\r\n              this.router.navigateByUrl('/not-found');\r\n              break;\r\n            case 500:\r\n              const navigationExtras: NavigationExtras = {state: {error: error.error}};\r\n              this.router.navigateByUrl('/server-error', navigationExtras);\r\n              break;\r\n            default:\r\n              this.toastr.error('Something unexpected went wrong');\r\n              console.log(error);\r\n              break;\r\n          }\r\n        }\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(private accountService: AccountService, private toastr: ToastrService) { }\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.accountService.currentUser$.pipe(\r\n      map(user => {\r\n        if (user.roles.includes(\"Admin\") || user.roles.includes(\"Moderator\")) {\r\n          return true;\r\n        }\r\n        this.toastr.error('You cannot enter this area');\r\n      })\r\n    )\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/users';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUsersWithRoles() {\r\n    return this.http.get<Partial<User[]>>(this.baseUrl + 'admin/users-with-roles');\r\n  }\r\n\r\n  updateUserRoles(username: string, roles: string[]) {\r\n    return this.http.post(this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles, {});\r\n  }\r\n}\r\n","import { visitAll } from '@angular/compiler';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\r\nimport { User } from 'src/app/_models/users';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  templateUrl: './user-management.component.html',\r\n  styleUrls: ['./user-management.component.css']\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\n  users: Partial<User[]>;\r\n  bsModalRef: BsModalRef;\r\n\r\n  constructor(private adminService: AdminService, private modalService: BsModalService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getUsersWithRoles();\r\n  }\r\n\r\n  getUsersWithRoles() {\r\n    this.adminService.getUsersWithRoles().subscribe(users => {\r\n      this.users = users\r\n    })\r\n  }\r\n\r\n  openRolesModal(user: User) {\r\n    const config = {\r\n      class: 'modal-dialog-centered',\r\n      initialState: {\r\n        user,\r\n        roles: this.getRolesArray(user)\r\n      }\r\n    }\r\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\r\n    this.bsModalRef.content.updateSelectedRoles.subscribe(values => {\r\n      const rolesToUpdate = {\r\n        roles: [...values.filter(val => val.checked === true).map(val => val.name)]\r\n      };\r\n      if (rolesToUpdate) {\r\n        this.adminService.updateUserRoles(user.username, rolesToUpdate.roles).subscribe(() => {\r\n          user.roles = [...rolesToUpdate.roles]\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  private getRolesArray(user) {\r\n    const roles = [];\r\n    const userRoles = user.roles;\r\n    const availableRoles: any[] = [\r\n      {name: 'Admin', value: 'Admin'},\r\n      {name: 'Moderator', value: 'Moderator'},\r\n      {name: 'Member', value: 'Member'},\r\n    ];\r\n\r\n    availableRoles.forEach(role => {\r\n      let isMatch = false;\r\n      for (const userRole of userRoles) {\r\n        if (role.name === userRole) {\r\n          isMatch = true;\r\n          role.checked = true;\r\n          roles.push(role);\r\n          break;\r\n        }\r\n      }\r\n      if (!isMatch) {\r\n        role.checked = false;\r\n        roles.push(role);\r\n      }\r\n    })\r\n    return roles;\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <table class=\"table\">\r\n        <tr>\r\n            <th style=\"width: 30%;\">Username</th>\r\n            <th style=\"width: 40%;\">Active roles</th>\r\n            <th style=\"width: 30%;\"></th>\r\n        </tr>\r\n        <tr *ngFor=\"let user of users\">\r\n            <td>{{user.username}}</td>\r\n            <td>{{user.roles}}</td>\r\n            <td><button (click)=\"openRolesModal(user)\" class=\"btn btn-info\">Edit Roles</button></td>\r\n        </tr>\r\n    </table>\r\n</div>","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxGalleryAnimation, NgxGalleryImage, NgxGalleryOptions } from '@kolkov/ngx-gallery';\r\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { User } from 'src/app/_models/users';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\nimport { PresenceService } from 'src/app/_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-member-detail',\r\n  templateUrl: './member-detail.component.html',\r\n  styleUrls: ['./member-detail.component.css']\r\n})\r\nexport class MemberDetailComponent implements OnInit, OnDestroy {\r\n  @ViewChild('memberTabs', {static: true}) memberTabs: TabsetComponent;\r\n  member: Member;\r\n  galleryOptions: NgxGalleryOptions[];\r\n  galleryImages: NgxGalleryImage[];\r\n  activeTabs: TabDirective;\r\n  messages: Message[] = [];\r\n  user: User;\r\n\r\n  constructor(public presence: PresenceService, private route: ActivatedRoute,\r\n      private messageService: MessageService, private accountService: AccountService,\r\n      private router: Router) {\r\n        this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\r\n        this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n      }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(data => {\r\n      this.member = data.member;\r\n    })\r\n\r\n    this.route.queryParams.subscribe(params =>  {\r\n      params.tab ? this.selectTab(params.tab) : this.selectTab(0);\r\n    })\r\n\r\n    this.galleryOptions = [\r\n      {\r\n        width: '500px',\r\n        height: '500px',\r\n        imagePercent: 100,\r\n        thumbnailsColumns: 4,\r\n        imageAnimation: NgxGalleryAnimation.Slide,\r\n        preview: false\r\n      }\r\n    ]\r\n\r\n    this.galleryImages = this.getImages();\r\n  }\r\n\r\n  getImages(): NgxGalleryImage[] {\r\n    const imageUrls = [];\r\n    for (const photo of this.member.photos) {\r\n      imageUrls.push({\r\n        small: photo?.url,\r\n        medium: photo?.url,\r\n        big: photo?.url\r\n      })\r\n    }\r\n    return imageUrls;\r\n  }\r\n\r\n  loadMessages() {\r\n    this.messageService.getMessageThread(this.member.username).subscribe(messages => {\r\n      this.messages = messages;\r\n    })\r\n  }\r\n\r\n  selectTab(tabId: number) {\r\n    this.memberTabs.tabs[tabId].active = true;\r\n  }\r\n\r\n  onTabActivated(data: TabDirective) {\r\n    this.activeTabs = data;\r\n    if (this.activeTabs.heading === 'Messages' && this.messages.length === 0) {\r\n      this.messageService.createHubConnection(this.user, this.member.username);\r\n    } else {\r\n      this.messageService.stopHubConnection();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.messageService.stopHubConnection();\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-4\">\r\n        <div class=\"card\">\r\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top img-thumbnail\">\r\n            <div class=\"card-body\">\r\n                <div class=\"mb-2\" *ngIf=\"(presence.onlineUsers$ | async).includes(member.username)\">\r\n                    <i class=\"fa fa-user circle text-success\"></i> Online now\r\n                </div>\r\n                <div>\r\n                    <strong>Location:</strong>\r\n                    <p>{{member.city}}, {{member.country}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Age:</strong>\r\n                    <p>{{member.age}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Last Active:</strong>\r\n                    <p>{{member.lastActive | timeago}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Member since:</strong>\r\n                    <p>{{member.created | date: 'longDate'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <div class=\"btn-group d-flex\">\r\n                    <button class=\"btn btn-primary\">Like</button>\r\n                    <button (click)=\"selectTab(3)\" class=\"btn btn-success\">Message</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-8\">\r\n        <tabset class=\"member-tabset\" #memberTabs>\r\n            <tab heading='About {{member.knownAs}}' (selectTab)=\"onTabActivated($event)\">\r\n                <h4>Description</h4>\r\n                <p>{{member.introduction}}</p>\r\n                <h4>Looking for</h4>\r\n                <p>{{member.lookingFor}}</p>\r\n            </tab>\r\n            <tab heading='Interest' (selectTab)=\"onTabActivated($event)\">\r\n                <h4>Interests</h4>\r\n                <p>{{member.interests}}</p>\r\n            </tab>\r\n            <tab heading='Photos' (selectTab)=\"onTabActivated($event)\">\r\n                <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" style=\"display: inline-block; margin-bottom: 20px;\"></ngx-gallery>\r\n            </tab>\r\n            <tab heading='Messages' (selectTab)=\"onTabActivated($event)\">\r\n                <app-member-messages [username]=\"member.username\"></app-member-messages>\r\n            </tab>\r\n        </tabset>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private accountService: AccountService, private toastr: ToastrService) { }\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map(user => {\n        if (user) return true;\n        this.toastr.error('You shall not pass!');\n      })\n    )\n  }\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Group } from '../_models/group';\r\nimport { Message } from '../_models/message';\r\nimport { User } from '../_models/users';\r\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n  baseUrl = environment.apiUrl;\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection: HubConnection;\r\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\r\n  messageThread$ = this.messageThreadSource.asObservable();\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  createHubConnection(user: User, otherUsername: string) {\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\r\n        accessTokenFactory: () => user.token\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n      this.hubConnection.start().catch(error => console.log(error));\r\n\r\n      this.hubConnection.on('ReceiveMessageThread', messages => {\r\n        this.messageThreadSource.next(messages);\r\n      })\r\n\r\n      this.hubConnection.on('NewMessage', message => {\r\n        this.messageThread$.pipe(take(1)).subscribe(messages => {\r\n          this.messageThreadSource.next([...messages, message])\r\n        })\r\n      })\r\n\r\n      this.hubConnection.on('UpdatedGroup', (group: Group) => {\r\n        if (group.connections.some(u => u.username === otherUsername)) {\r\n          this.messageThread$.pipe(take(1)).subscribe(messages => {\r\n            messages.forEach(message => {\r\n              if (!message.dateRead) {\r\n                message.dateRead = new Date(Date.now())\r\n              }\r\n            })\r\n            this.messageThreadSource.next([...messages]);\r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n  stopHubConnection() {\r\n    if (this.hubConnection) {\r\n      this.hubConnection.stop();\r\n    }\r\n  }\r\n\r\n  getMessages(pageNumber, pageSize, container) {\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n    params = params.append('Container', container);\r\n    return getPaginatedResult<Message[]>(this.baseUrl + 'messages', params, this.http);\r\n  }\r\n\r\n  getMessageThread(username: string) {\r\n    return this.http.get<Message[]>(this.baseUrl + 'messages/thread/' + username);\r\n  }\r\n\r\n  async sendMessage(username: string, content: string) {\r\n    return this.hubConnection.invoke('SendMessage', {recipientUsername: username, content})\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    return this.http.delete(this.baseUrl + 'messages/' + id);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { Pagination } from 'src/app/_models/pagination';\r\nimport { UserParams } from 'src/app/_models/userParams';\r\nimport { User } from 'src/app/_models/users';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-member-list',\r\n  templateUrl: './member-list.component.html',\r\n  styleUrls: ['./member-list.component.css']\r\n})\r\nexport class MemberListComponent implements OnInit {\r\n  members: Member[];\r\n  pagination: Pagination;\r\n  userParams: UserParams;\r\n  user: User;\r\n  genderList = [{value: 'male', display: 'Males'}, {value: 'female', display: 'Female'}];\r\n\r\n  constructor(private memberService: MembersService) {\r\n    this.userParams = this.memberService.getUserParams();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMembers();\r\n  }\r\n\r\n  loadMembers() {\r\n    this.memberService.setUserParams(this.userParams);\r\n    this.memberService.getMembers(this.userParams).subscribe(response => {\r\n      this.members = response.result;\r\n      this.pagination = response.pagination;\r\n    })\r\n  }\r\n\r\n  resetFilters() {\r\n    this.userParams = this.memberService.resetUserParams();\r\n    this.loadMembers();\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    this.userParams.pageNumber = event.page;\r\n    this.memberService.setUserParams(this.userParams);\r\n    this.loadMembers();\r\n  }\r\n}\r\n","<div class=\"text-center mt-3\">\r\n    <h2>Your matches - {{pagination?.totalItems}} found</h2>\r\n</div>\r\n\r\n<div class=\"container mt-3\">\r\n    <form #form=\"ngForm\" class=\"form-inline mb-3\" (ngSubmit)=\"loadMembers()\" autocomplete=\"off\">\r\n        <div class=\"form-group\">\r\n            <label>Age from: </label>\r\n            <input\r\n                type=\"number\"\r\n                class=\"form-control ml-1\"\r\n                style=\"width: 70px;\"\r\n                name=\"minAge\"\r\n                [(ngModel)]=\"userParams.minAge\"\r\n            >\r\n        </div>\r\n        <div class=\"form-group px-2\">\r\n            <label>Age to: </label>\r\n            <input\r\n                type=\"number\"\r\n                class=\"form-control ml-1\"\r\n                style=\"width: 70px;\"\r\n                name=\"maxAge\"\r\n                [(ngModel)]=\"userParams.maxAge\"\r\n            >\r\n        </div>\r\n        <div class=\"form-group px-2\">\r\n            <label>Show: </label>\r\n            <select name=\"gender\" style=\"width: 130px;\" [(ngModel)]=\"userParams.gender\" class=\"form-control ml-1\">\r\n                <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\r\n                    {{gender.display}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n\r\n        <button class=\"btn btn-primary ml-1\" type=\"submit\">Apply Filters</button>\r\n        <button (click)=\"resetFilters()\" class=\"btn btn-info ml-1\" type=\"submit\">Reset Filters</button>\r\n        <div class=\"col\">\r\n            <div class=\"btn-group float-right\">\r\n                <button class=\"btn btn-primary\"\r\n                    type=\"button\"\r\n                    name=\"orderBy\"\r\n                    [(ngModel)]=\"userParams.orderBy\"\r\n                    (click)=\"loadMembers()\"\r\n                    btnRadio=\"lastActive\">\r\n                    Last Active\r\n                </button>\r\n                <button class=\"btn btn-primary\"\r\n                    type=\"button\"\r\n                    name=\"orderBy\"\r\n                    [(ngModel)]=\"userParams.orderBy\"\r\n                    (click)=\"loadMembers()\"\r\n                    btnRadio=\"created\">\r\n                    Newest Members\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div *ngFor=\"let member of members\" class=\"col-2\">\r\n        <app-member-card [member]=\"member\"></app-member-card>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\r\n    <pagination\r\n        [boundaryLinks]=\"true\"\r\n        [totalItems]=\"pagination.totalItems\"\r\n        [itemsPerPage]=\"pagination.itemsPerPage\"\r\n        [(ngModel)]=\"pagination.currentPage\"\r\n        (pageChanged)=\"pageChanged($event)\"\r\n        previousText=\"&lsaquo;\"\r\n        nextText=\"&rsaquo;\"\r\n        firstText=\"&laquo;\"\r\n        lastText=\"&raquo;\">\r\n    </pagination>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { User } from './_models/users';\r\nimport { AccountService } from './_services/account.service';\r\nimport { PresenceService } from './_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'The Dating app';\r\n  users: any;\r\n\r\n  constructor(private accountService: AccountService, private presence: PresenceService) {}\r\n\r\n  ngOnInit() {\r\n    this.setCurrentUser();\r\n  }\r\n\r\n  setCurrentUser() {\r\n    const user: User = JSON.parse(localStorage.getItem('user'));\r\n    if (user) {\r\n      this.accountService.setCurrentUser(user);\r\n      this.presence.createHubConnection(user);\r\n    }\r\n  }\r\n}\r\n","<ngx-spinner>\r\n    <h3>Loading...</h3>\r\n</ngx-spinner>\r\n\r\n<app-nav></app-nav>\r\n\r\n<div class=\"container\" style=\"margin-top: 100px;\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { BusyService } from '../_services/busy.service';\r\nimport { delay, finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LoadingInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private busyService: BusyService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    this.busyService.busy();\r\n    return next.handle(request).pipe(\r\n      delay(1000),\r\n      finalize(() => {\r\n        this.busyService.idle();\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { ReturnStatement } from '@angular/compiler';\r\nimport { Injectable } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Member } from '../_models/member';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { UserParams } from '../_models/userParams';\r\nimport { User } from '../_models/users';\r\nimport { AccountService } from './account.service';\r\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MembersService {\r\n  baseUrl = environment.apiUrl;\r\n  members: Member[] = [];\r\n  memberCache = new Map();\r\n  user: User;\r\n  userParams: UserParams;\r\n\r\n  constructor(private http: HttpClient, private accountService: AccountService) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\r\n      this.user = user;\r\n      this.userParams = new UserParams(user);\r\n    })\r\n  }\r\n\r\n  getUserParams() {\r\n    return this.userParams;\r\n  }\r\n\r\n  setUserParams(params: UserParams) {\r\n    this.userParams = params;\r\n  }\r\n\r\n  resetUserParams() {\r\n    this.userParams = new UserParams(this.user);\r\n    return this.userParams;\r\n  }\r\n\r\n  getMembers(userParams: UserParams) {\r\n    //try and pull data from cache, userparams are the key\r\n    var response = this.memberCache.get(Object.values(userParams).join('-'));\r\n    if (response) {\r\n      return of(response);\r\n    }\r\n\r\n    let params = getPaginationHeaders(userParams.pageNumber, userParams.pageSize);\r\n\r\n    params = params.append('minAge', userParams.minAge.toString());\r\n    params = params.append('maxAge', userParams.maxAge.toString());\r\n    params = params.append('gender', userParams.gender);\r\n    params = params.append('orderBy', userParams.orderBy);\r\n\r\n    return getPaginatedResult<Member[]>(this.baseUrl + 'users', params, this.http)\r\n      .pipe(map(response => {\r\n        //set our data in cache\r\n        this.memberCache.set(Object.values(userParams).join('-'), response);\r\n        return response;\r\n      }))\r\n  }\r\n\r\n  getMember(username: string) {\r\n    const member = [...this.memberCache.values()]  //spread values\r\n      .reduce((arr, elem) => arr.concat(elem.result), [])  //reduce into one array\r\n      .find((member: Member) => member.username === username);  //find the element that matches the username\r\n\r\n    if (member) {\r\n      return of(member);  //if the member exists in cache then return, else get from API\r\n    }\r\n    return this.http.get<Member>(this.baseUrl + 'users/' + username);\r\n  }\r\n\r\n  updateMember(member: Member) {\r\n    return this.http.put(this.baseUrl + 'users', member).pipe(\r\n      map(() => {\r\n        const index = this.members.indexOf(member);\r\n        this.members[index] = member;\r\n      })\r\n    );\r\n  }\r\n\r\n  setMainPhoto(photoId: number) {\r\n    return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {});\r\n  }\r\n\r\n  deletePhoto(photoId: number) {\r\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId);\r\n  }\r\n\r\n  addLike(username: string) {\r\n    return this.http.post(this.baseUrl + 'likes/' + username, {}); //post must have empty bodies\r\n  }\r\n\r\n  getLikes(predicate: string, pageNumber, pageSize) {\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n    params = params.append('predicate', predicate);\r\n    return getPaginatedResult<Partial<Member[]>>(this.baseUrl + 'likes', params, this.http);\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { SharedModule } from './_modules/shared.module';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\r\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\r\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\r\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { HasRoleDirective } from './_directives/has-role.directive';\r\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\r\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\r\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\r\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    MemberListComponent,\r\n    MemberDetailComponent,\r\n    ListsComponent,\r\n    MessagesComponent,\r\n    TestErrorsComponent,\r\n    NotFoundComponent,\r\n    ServerErrorComponent,\r\n    MemberCardComponent,\r\n    MemberEditComponent,\r\n    PhotoEditorComponent,\r\n    TextInputComponent,\r\n    DateInputComponent,\r\n    MemberMessagesComponent,\r\n    AdminPanelComponent,\r\n    HasRoleDirective,\r\n    UserManagementComponent,\r\n    PhotoManagementComponent,\r\n    RolesModalComponent,\r\n    ConfirmDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ],\r\n  providers: [\r\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\r\n    {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\r\n    {provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { Photo } from 'src/app/_models/photo';\r\nimport { User } from 'src/app/_models/users';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-photo-editor',\r\n  templateUrl: './photo-editor.component.html',\r\n  styleUrls: ['./photo-editor.component.css']\r\n})\r\nexport class PhotoEditorComponent implements OnInit {\r\n  @Input() member: Member;\r\n  uploader: FileUploader;\r\n  hasBaseDropZoneOver = false;\r\n  baseUrl = environment.apiUrl;\r\n  user: User;\r\n\r\n  constructor(private accountService: AccountService, private memberService: MembersService) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeUploader();\r\n  }\r\n\r\n  fileOverBase(e: any) {\r\n    this.hasBaseDropZoneOver = e;\r\n  }\r\n\r\n  setMainPhoto(photo: Photo) {\r\n    this.memberService.setMainPhoto(photo.id).subscribe(() => {\r\n      this.user.photoUrl = photo.url;\r\n      this.accountService.setCurrentUser(this.user);\r\n      this.member.photoUrl = photo.url;\r\n      this.member.photos.forEach(p => {\r\n        if (p.isMain) p.isMain = false;\r\n        if (p.id === photo.id) p.isMain = true;\r\n      })\r\n    })\r\n  }\r\n\r\n  deletePhoto(photoId: number) {\r\n    this.memberService.deletePhoto(photoId).subscribe(() => {\r\n      this.member.photos = this.member.photos.filter(photo => photo.id !== photoId);\r\n    })\r\n  }\r\n\r\n  initializeUploader() {\r\n    this.uploader = new FileUploader({\r\n      url: this.baseUrl + 'users/add-photo',\r\n      authToken: 'Bearer ' + this.user.token,\r\n      isHTML5: true,\r\n      allowedFileType: ['image'],\r\n      removeAfterUpload: true,\r\n      autoUpload: false,\r\n      maxFileSize: 10 * 1024 * 1024\r\n    });\r\n\r\n    this.uploader.onAfterAddingFile = (file) => {\r\n      file.withCredentials = false;\r\n    }\r\n\r\n     this.uploader.onSuccessItem = (item, response, status, headers) => {\r\n       if (response) {\r\n         const photo: Photo = JSON.parse(response);\r\n         this.member.photos.push(photo);\r\n         if (photo.isMain) {\r\n           this.user.photoUrl = photo.url;\r\n           this.member.photoUrl = photo.url;\r\n           this.accountService.setCurrentUser(this.user);\r\n         }\r\n       }\r\n     }\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-2\" *ngFor=\"let photo of member.photos\">\r\n        <img src=\"{{photo.url}}\" alt=\"{{photo.url}}\" class=\"img-thumbnail p-1\">\r\n        <div class=\"text-center\">\r\n            <button\r\n                [disabled]=\"photo.isMain\"\r\n                (click)=\"setMainPhoto(photo)\"\r\n                [ngClass]='photo.isMain ? \"btn-success active\" : \"btn-outline-success\"'\r\n                class=\"btn btn-sm\">Main</button>\r\n            <button\r\n                [disabled]=\"photo.isMain\"\r\n                (click)=\"deletePhoto(photo.id)\"\r\n                class=\"btn btn-sm btn-danger\"><i class=\"fa fa-trash\"></i></button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row mt-3\">\r\n \r\n    <div class=\"col-md-3\">\r\n\r\n        <h3>Add Photos</h3>\r\n\r\n        <div ng2FileDrop\r\n             [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\"\r\n             (fileOver)=\"fileOverBase($event)\"\r\n             [uploader]=\"uploader\"\r\n             class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\r\n             <i class=\"fa fa-upload fa-3x\"></i>\r\n            Drop photos here\r\n        </div>\r\n\r\n        Multiple\r\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\r\n\r\n        Single\r\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\r\n    </div>\r\n\r\n    <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\r\n\r\n        <h3>Upload queue</h3>\r\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\r\n\r\n        <table class=\"table\">\r\n            <thead>\r\n            <tr>\r\n                <th width=\"50%\">Name</th>\r\n                <th>Size</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr *ngFor=\"let item of uploader.queue\">\r\n                <td><strong>{{ item?.file?.name }}</strong></td>\r\n                <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n        <div>\r\n            <div>\r\n                Queue progress:\r\n                <div class=\"progress\" style=\"\">\r\n                    <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-success btn-s\"\r\n                    (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\r\n                <span class=\"fa fa-upload\"></span> Upload all\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-warning btn-s\"\r\n                    (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\r\n                <span class=\"fa fa-ban\"></span> Cancel all\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-danger btn-s\"\r\n                    (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\r\n                <span class=\"fa fa-trash\"></span> Remove all\r\n            </button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Member } from '../_models/member';\r\nimport { MembersService } from '../_services/members.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MemberDetailedResolver implements Resolve<Member> {\r\n\r\n    constructor(private memberService: MembersService) { }\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Member> {\r\n        return this.memberService.getMember(route.paramMap.get('username'));\r\n    }\r\n}","import { Component, Input, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-text-input',\r\n  templateUrl: './text-input.component.html',\r\n  styleUrls: ['./text-input.component.css']\r\n})\r\nexport class TextInputComponent implements ControlValueAccessor {\r\n  @Input() label: string;\r\n  @Input() type = 'text';\r\n\r\n  constructor(@Self() public ngControl: NgControl) { \r\n    this.ngControl.valueAccessor = this;\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n  }\r\n\r\n}\r\n","<div class=\"form-group\">\r\n    <input\r\n        [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\r\n        type={{type}}\r\n        class=\"form-control\"\r\n        [formControl]=\"ngControl.control\"\r\n        placeholder={{label}}\r\n    >\r\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">Please enter a {{label}}</div>\r\n    <div *ngIf=\"ngControl.control.errors?.minlength\" class=\"invalid-feedback\">{{label}} must be at least {{ngControl.control.errors.minlength['requiredLength']}} characters</div>\r\n    <div *ngIf=\"ngControl.control.errors?.maxlength\" class=\"invalid-feedback\">{{label}} must be at most {{ngControl.control.errors.maxlength['requiredLength']}} characters</div>\r\n    <div *ngIf=\"ngControl.control.errors?.isMatching\" class=\"invalid-feedback\">Password do not match</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Member } from '../_models/member';\nimport { Pagination } from '../_models/pagination';\nimport { MembersService } from '../_services/members.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  members: Partial<Member[]>;\n  predicate = 'liked';\n  pageNumber = 1;\n  pageSize = 5;\n  pagination: Pagination;\n\n  constructor(private memberService: MembersService) { }\n\n  ngOnInit(): void {\n    this.loadLikes();\n  }\n\n  loadLikes() {\n    this.memberService.getLikes(this.predicate, this.pageNumber, this.pageSize).subscribe(response => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n    })\n  }\n\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadLikes();\n  }\n\n}\n","<div class=\"text-center mt-3\">\n    <h2>{{predicate === 'liked' ? 'Members I like' : 'Members who like me'}}</h2>\n</div>\n\n<div class=\"container mt-3\">\n    <div class=\"row\">\n        <div class=\"btn-group\" name=\"predicate\">\n            <button\n                class=\"btn btn-primary\"\n                btnRadio=\"liked\"\n                [(ngModel)]=\"predicate\"\n                (click)=\"loadLikes()\">\n                Members I like\n            </button>\n            <button\n                class=\"btn btn-primary\"\n                btnRadio=\"likedBy\"\n                [(ngModel)]=\"predicate\"\n                (click)=\"loadLikes()\">\n                Members who like me\n            </button>\n        </div>\n    </div>\n\n    <div class=\"row mt-3\">\n        <div class=\"col-2\" *ngFor=\"let member of members\">\n            <app-member-card [member]=\"member\"></app-member-card>\n        </div>\n    </div>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n    <pagination\n        [boundaryLinks]=\"true\"\n        [totalItems]=\"pagination.totalItems\"\n        [itemsPerPage]=\"pagination.itemsPerPage\"\n        [(ngModel)]=\"pagination.currentPage\"\n        (pageChanged)=\"pageChanged($event)\"\n        previousText=\"&lsaquo;\"\n        nextText=\"&rsaquo;\"\n        firstText=\"&laquo;\"\n        lastText=\"&raquo;\">\n    </pagination>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../_models/users';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n  model: any = {}\r\n\r\n  constructor(public accountService: AccountService, private router: Router, private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  login () {\r\n    this.accountService.login(this.model).subscribe(response => {\r\n      this.router.navigateByUrl('/members')\r\n    })\r\n  }\r\n\r\n  logout() {\r\n    this.accountService.logout();\r\n    this.router.navigateByUrl('/');\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\">\r\n    <div class=\"container\">\r\n        <a class=\"navbar-brand\" routerLink='/' routerLinkActive='active'>Dating App</a>\r\n\r\n        <ul class=\"navbar-nav mr-auto\">\r\n            <ng-container  *ngIf=\"accountService.currentUser$ | async\">\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink='/members' routerLinkActive='active'>Matches</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink='/lists' routerLinkActive='active'>Lists</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink='/messages' routerLinkActive='active'>Messages</a>\r\n                </li>\r\n                <li *appHasRole='[\"Admin\", \"Moderator\"]' class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink='/admin' routerLinkActive='active'>Admin</a>\r\n                </li>\r\n            </ng-container>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" routerLink='/errors' routerLinkActive='active'>Errors</a>\r\n            </li>\r\n        </ul>\r\n\r\n        <div class=\"dropdown\" *ngIf=\"(accountService.currentUser$ | async) as user\" dropdown>\r\n            <img src=\"{{user.photoUrl || './assets/user.png'}}\" alt=\"{{user.username}}\">\r\n            <a class=\"dropdown-toggle text-light ml-2\" dropdownToggle>Welcome {{user.knownAs || user.username | titlecase}}</a>\r\n            <div class=\"dropdown-menu mt-3\" *dropdownMenu>\r\n                <a class=\"dropdown-item\" routerLink=\"/member/edit\">Edit Profile</a>\r\n                <div class=\"dropdown-divider\"></div>\r\n                <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\r\n            </div>\r\n        </div>\r\n\r\n        <form *ngIf=\"(accountService.currentUser$ | async) === null\" #loginForm=\"ngForm\" class=\"form-inline mt-2 mt-md-0\" (ngSubmit)=\"login()\" autocomplete=\"off\">\r\n            <input\r\n                name=\"username\"\r\n                [(ngModel)]=\"model.username\"\r\n                class=\"form-control mr-sm-2\"\r\n                type=\"text\"\r\n                placeholder=\"Username\">\r\n            <input\r\n                name=\"password\"\r\n                [(ngModel)]=\"model.password\"\r\n                class=\"form-control mr-sm-2\"\r\n                type=\"password\"\r\n                placeholder=\"Password\">\r\n            <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\r\n        </form>\r\n    </div>\r\n</nav>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { PresenceService } from 'src/app/_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-member-card',\r\n  templateUrl: './member-card.component.html',\r\n  styleUrls: ['./member-card.component.css']\r\n})\r\nexport class MemberCardComponent implements OnInit {\r\n  @Input() member: Member;\r\n\r\n  constructor(private memberService: MembersService, private toastr: ToastrService, public presence: PresenceService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  addLike(member: Member) {\r\n    this.memberService.addLike(member.username).subscribe(() => {\r\n      this.toastr.success('You have liked ' + member.knownAs);\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"card mb-4\">\r\n    <div class=\"card-img-wrapper\">\r\n        <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top\">\r\n        <ul class=\"list-inline member-icons animate text-center\">\r\n            <li class=\"list-inline-item\">\r\n                <button routerLink='/members/{{member.username}}' class=\"btn btn-primary\">\r\n                    <i class=\"fa fa-user\"></i>\r\n                </button>\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n                <button (click)=\"addLike(member)\" class=\"btn btn-primary\">\r\n                    <i class=\"fa fa-heart\"></i>\r\n                </button>\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n                <button routerLink='/members/{{member.username}}'\r\n                    class=\"btn btn-primary\"\r\n                    [queryParams]='{tab: 3}'>\r\n                    <i class=\"fa fa-envelope\"></i>\r\n                </button>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"card-body p-1\">\r\n        <h6 class=\"card-title text-center mb-1\">\r\n            <span [class.is-online]=\"(presence.onlineUsers$ | async).includes(member.username)\">\r\n                <i class=\"fa fa-user mr-2\"></i>\r\n            </span>\r\n            {{member.knownAs}}, {{member.age}}\r\n        </h6>\r\n        <p class=\"card-text text-muted text-center\">{{member.city}}</p>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/users';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PresenceService {\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection: HubConnection;\r\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\r\n  onlineUsers$ = this.onlineUsersSource.asObservable();\r\n\r\n  constructor(private toastr: ToastrService, private router: Router) { }\r\n\r\n  createHubConnection(user: User) {\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'presence', {\r\n        accessTokenFactory: () => user.token\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    this.hubConnection\r\n      .start()\r\n      .catch(error => console.log(error));\r\n\r\n    this.hubConnection.on('UserIsOnline', username => {\r\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\r\n        this.onlineUsersSource.next([...usernames, username])\r\n      })\r\n    })\r\n\r\n    this.hubConnection.on('UserIsOffline', username => {\r\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\r\n        this.onlineUsersSource.next([...usernames.filter(u => u !== username)])\r\n      })\r\n    })\r\n\r\n    this.hubConnection.on('GetOnlineUsers', (usernames: string[]) => {\r\n      this.onlineUsersSource.next(usernames);\r\n    })\r\n\r\n    this.hubConnection.on('NewMessageReceived', ({username, knownAs}) => {\r\n      this.toastr.info(knownAs + ' has sent you a new message!')\r\n        .onTap\r\n        .pipe(take(1))\r\n        .subscribe(() => this.router.navigateByUrl('/members/' + username + '?tab=3'));\r\n    })\r\n  }\r\n\r\n  stopHubConnection() {\r\n    this.hubConnection.stop().catch(error => console.log(error));\r\n  }\r\n}\r\n","import { User } from './users';\r\n\r\nexport class UserParams {\r\n    gender: string;\r\n    minAge = 18;\r\n    maxAge = 99;\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    orderBy = 'lastActive';\r\n\r\n    constructor(user: User) {\r\n        this.gender = user.gender === 'female' ? 'male' : 'female';\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin-panel',\r\n  templateUrl: './admin-panel.component.html',\r\n  styleUrls: ['./admin-panel.component.css']\r\n})\r\nexport class AdminPanelComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h2>Admin Panel</h2>\r\n<div class=\"tab-panel\">\r\n    <tabset class=\"member-tabset\">\r\n        <tab heading='User management' *appHasRole='[\"Admin\"]'>\r\n            <div class=\"container\">\r\n                <app-user-management></app-user-management>\r\n            </div>\r\n        </tab>\r\n        <tab heading='Photo management' *appHasRole='[\"Admin\", \"Moderator\"]'>\r\n            <div class=\"container\">\r\n                <app-photo-management></app-photo-management>\r\n            </div>\r\n        </tab>\r\n    </tabset>\r\n</div>","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { User } from 'src/app/_models/users';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-member-edit',\r\n  templateUrl: './member-edit.component.html',\r\n  styleUrls: ['./member-edit.component.css']\r\n})\r\nexport class MemberEditComponent implements OnInit {\r\n  @ViewChild('editForm') editForm: NgForm;\r\n  member: Member;\r\n  user: User;\r\n  @HostListener('window:beforeunload', ['$event']) unloadNotification($event: any) {\r\n    if (this.editForm.dirty) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n\r\n  constructor(private accountService: AccountService, private memberService: MembersService, private toastr: ToastrService) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMember();\r\n  }\r\n\r\n  loadMember() {\r\n    this.memberService.getMember(this.user.username).subscribe(member => {\r\n      this.member = member;\r\n    });\r\n  }\r\n\r\n  updateMember() {\r\n    this.memberService.updateMember(this.member).subscribe(() => {\r\n      this.toastr.success('Profile updated successfully');\r\n      this.editForm.reset(this.member);\r\n    })\r\n  }\r\n}\r\n","<div class=\"row\" *ngIf=\"member\">\r\n    <div class=\"col-4\">\r\n        <h1>Your profile</h1>\r\n    </div>\r\n    <div class=\"col-8\">\r\n        <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\r\n            <strong>Information: </strong> You have made changes. Any unsaved changes will be lost.\r\n        </div>\r\n    </div>\r\n    <div class=\"col-4\">\r\n        <div class=\"card\">\r\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\"\r\n                class=\"card-img-top img-thumbnail\">\r\n            <div class=\"card-body\">\r\n                <div>\r\n                    <strong>Location:</strong>\r\n                    <p>{{member.city}}, {{member.country}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Age:</strong>\r\n                    <p>{{member.age}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Last Active:</strong>\r\n                    <p>{{member.lastActive | timeago}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Member since:</strong>\r\n                    <p>{{member.created | date: 'longDate'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <button [disabled]=\"!editForm.dirty\" form=\"editForm\" type=\"submit\" class=\"btn btn-success btn-block\">Save Changes</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-8\">\r\n        <tabset class=\"member-tabset\">\r\n            <tab heading='About {{member.knownAs}}'>\r\n                <form id=\"editForm\" #editForm=\"ngForm\" (ngSubmit)=\"updateMember()\">\r\n                    <h4>Description</h4>\r\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.introduction\" name=\"introduction\" rows=\"6\"></textarea>\r\n                    <h4 class=\"mt-2\">Looking for</h4>\r\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.lookingFor\" name=\"lookingFor\" rows=\"6\"></textarea>\r\n                    <h4 class=\"mt-2\">Interests</h4>\r\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.interests\" name=\"interests\" rows=\"6\"></textarea>\r\n                    <h4 class=\"mt-2\">Location Details:</h4>\r\n                    <div class=\"form-inline\">\r\n                        <label for=\"city\">City: </label>\r\n                        <input [(ngModel)]=\"member.city\" type=\"text\" name=\"city\" class=\"form-control mx-2\">\r\n                        <label for=\"city\">Country: </label>\r\n                        <input [(ngModel)]=\"member.country\" type=\"text\" name=\"country\" class=\"form-control mx-2\">\r\n                    </div>\r\n                </form>\r\n            </tab>\r\n            <tab heading='Edit Photos'>\r\n                <app-photo-editor [member]=\"member\"></app-photo-editor>\r\n            </tab>\r\n        </tabset>\r\n    </div>\r\n</div>","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { PaginatedResult } from '../_models/pagination';\r\n\r\nexport function getPaginatedResult<T>(url, params, http: HttpClient) {\r\n    const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n    return http.get<T>(url, { observe: 'response', params }).pipe(\r\n        map(response => {\r\n            paginatedResult.result = response.body;\r\n            if (response.headers.get('Pagination') !== null) {\r\n                paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\r\n            }\r\n            return paginatedResult;\r\n        })\r\n    );\r\n}\r\n\r\nexport function getPaginationHeaders(pageNumber: number, pageSize: number) {\r\n    let params = new HttpParams();\r\n\r\n    params = params.append('pageNumber', pageNumber.toString());\r\n    params = params.append('pageSize', pageSize.toString());\r\n\r\n    return params;\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\nimport { ConfirmService } from '../_services/confirm.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\r\n\r\n  constructor(private confirmService: ConfirmService) { }\r\n\r\n  canDeactivate(component: MemberEditComponent,): Observable<boolean> | boolean {\r\n    if (component.editForm.dirty) {\r\n      return this.confirmService.confirm();\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { runInThisContext } from 'vm';\r\n\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.css']\r\n})\r\nexport class ConfirmDialogComponent implements OnInit {\r\n  title: string;\r\n  message: string;\r\n  btnOkText: string;\r\n  btnCancelText: string;\r\n  result: boolean;\r\n\r\n  constructor(public bsModalRef: BsModalRef) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  confirm() {\r\n    this.result = true;\r\n    this.bsModalRef.hide();\r\n  }\r\n\r\n  decline() {\r\n    this.result = false;\r\n    this.bsModalRef.hide();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">{{title}}</h4>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <p>{{message}}</p>\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">{{btnOkText}}</button>\r\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">{{btnCancelText}}</button>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { AdminGuard } from './_guards/admin.guard';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\r\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolver';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n  {\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {path: 'members', component: MemberListComponent},\r\n      {path: 'members/:username', component: MemberDetailComponent, resolve: {member: MemberDetailedResolver}},\r\n      {path: 'member/edit', component: MemberEditComponent, canDeactivate: [PreventUnsavedChangesGuard]},\r\n      {path: 'lists', component: ListsComponent},\r\n      {path: 'messages', component: MessagesComponent},\r\n      {path: 'admin', component: AdminPanelComponent, canActivate: [AdminGuard]},\r\n    ]\r\n  },\r\n  {path: 'errors', component: TestErrorsComponent},\r\n  {path: 'not-found', component: NotFoundComponent},\r\n  {path: 'server-error', component: ServerErrorComponent},\r\n  {path: '**', component: NotFoundComponent, pathMatch: 'full'},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { Observable } from 'rxjs';\r\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmService {\r\n  bsModelRef: BsModalRef;\r\n\r\n  constructor(private modalService: BsModalService) { }\r\n\r\n  confirm(title = 'Confirmation',\r\n    message = 'Are you sure you want to do this?',\r\n    btnOkText = 'Ok',\r\n    btnCancelText = 'Cancel'): Observable<boolean> {\r\n      const config = {\r\n        initialState: {\r\n          title,\r\n          message,\r\n          btnOkText,\r\n          btnCancelText\r\n        }\r\n      }\r\n     this.bsModelRef = this.modalService.show(ConfirmDialogComponent, config);\r\n\r\n     return new Observable<boolean>(this.getResult());\r\n  }\r\n\r\n  private getResult() {\r\n    return (observer) => {\r\n      const subscription = this.bsModelRef.onHidden.subscribe(() => {\r\n        observer.next(this.bsModelRef.content.result);\r\n        observer.complete();\r\n      });\r\n\r\n      return {\r\n        unsubscribe() {\r\n          subscription.unsubscribe();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { User } from 'src/app/_models/users';\r\n\r\n@Component({\r\n  selector: 'app-roles-modal',\r\n  templateUrl: './roles-modal.component.html',\r\n  styleUrls: ['./roles-modal.component.css']\r\n})\r\nexport class RolesModalComponent implements OnInit {\r\n  @Input() updateSelectedRoles = new EventEmitter();\r\n  user: User;\r\n  roles: any[];\r\n\r\n  constructor(public bsModalRef: BsModalRef) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  updateRoles() {\r\n    this.updateSelectedRoles.emit(this.roles);\r\n    this.bsModalRef.hide();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Edit roles for {{user.username}}</h4>\r\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <form #rolesForm=\"ngForm\" id=\"rolesForm\">\r\n      <div class=\"form-check\" *ngFor=\"let role of roles\">\r\n        <input type=\"checkbox\"\r\n          class=\"form-check-input\"\r\n          [checked]=\"role.checked\"\r\n          value=\"role.name\"\r\n          (change)=\"role.checked = !role.checked\"\r\n          [disabled]=\"role.name === 'Admin' && user.username === 'admin'\"\r\n        ><!--dont allow admin user to disable admin role-->\r\n        <label>{{role.name}}</label>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">Cancel</button>\r\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">Submit</button>\r\n  </div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}